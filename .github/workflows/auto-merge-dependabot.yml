name: Auto-merge Dependabot PRs

on:
  pull_request_target:
    types: [opened, edited, synchronize, reopened, labeled]

permissions:
  contents: write
  pull-requests: write

jobs:
  automerge:
    if: github.actor == 'dependabot[bot]'
    runs-on: ubuntu-latest
    steps:
      - name: Dependabot metadata
        id: meta
        uses: dependabot/fetch-metadata@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Add labels
        uses: actions/github-script@v7
        with:
          script: |
            const labels = ['dependencies'];
            if (['version-update:semver-minor','version-update:semver-patch'].includes('${{ steps.meta.outputs.update-type }}')) {
              labels.push('automerge');
            }
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              labels,
            });

      - name: Enable auto-merge (squash) for non-major updates
        if: steps.meta.outputs.update-type != 'version-update:semver-major'
        uses: actions/github-script@v7
        with:
          script: |
            const pull_number = context.payload.pull_request.number;
            const { data: pr } = await github.rest.pulls.get({ owner: context.repo.owner, repo: context.repo.repo, pull_number });
            await github.graphql(`
              mutation($pullRequestId: ID!) {
                enablePullRequestAutoMerge(input: {pullRequestId: $pullRequestId, mergeMethod: SQUASH}) { clientMutationId }
              }
            `, { pullRequestId: pr.node_id });

