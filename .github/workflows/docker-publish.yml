name: Build and Publish Docker Image

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: Log in to GHCR
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha

      - name: Set up Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3

      - name: Build and push (CPU)
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            TORCH_INDEX_URL=https://download.pytorch.org/whl/cpu

      - name: Build and push (GPU)
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:gpu
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            TORCH_INDEX_URL=https://download.pytorch.org/whl/cu121

  release-nightly:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build-and-push
    permissions:
      contents: write
    steps:
      - name: Create Nightly Release (official)
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const tag = `nightly-${{ github.run_number }}`;
            try {
              await github.rest.repos.getReleaseByTag({ owner, repo, tag });
            } catch (e) {
              await github.rest.git.createTag({ owner, repo, tag, message: tag, object: context.sha, type: 'commit' });
            }
            await github.rest.repos.createRelease({
              owner,
              repo,
              tag_name: tag,
              name: `Nightly ${{ github.run_number }}`,
              draft: false,
              prerelease: true,
              generate_release_notes: true,
            });
